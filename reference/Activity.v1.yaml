info:
  title: Activity
  version: '1.0'
  description: Activity management API
  contact:
    name: Avonet Technologies
servers:
  - url: 'http://localhost:4000/dev/api'
    description: DEV
  - url: 'https://eiw077wanh.execute-api.us-east-1.amazonaws.com/qa/api'
    description: QA
paths:
  /activities:
    parameters: []
    post:
      summary: Create new activity
      operationId: post-activities
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: ../models/Activity.Response.v1.yaml
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: ../models/ErrorResponse.v1.yaml
              examples:
                Field validation error:
                  value:
                    code: VALIDATION_ERROR
                    message: Invalid activity
                    body:
                      name: Name is too long
                      type: Type is required
      description: 'Create new '
      requestBody:
        content:
          application/json:
            schema:
              $ref: ../models/Activity.Create.v1.yaml
        description: The activity to be created
      tags:
        - Activity
    get:
      summary: Search activities
      operationId: get-activities
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ../models/Activity.Response.v1.yaml
              examples: {}
      description: Search activities
      parameters:
        - schema:
            type: string
          in: query
          name: name
          description: Activity name
        - schema:
            type: string
          in: query
          name: location
          description: GPS location for searching nearset
        - schema:
            type: string
          in: query
          name: suberb
          description: Activity suberb
        - schema:
            type: number
          in: query
          name: gregs_max
          description: Maximum participants
        - schema:
            type: number
          in: query
          name: gregs_min
          description: Minimum participants
        - schema:
            type: number
          in: query
          name: cost_from
          description: Cost starting
        - schema:
            type: number
          in: query
          name: cost_to
          description: Cost up to
        - schema:
            type: array
          in: query
          name: type
          description: Activity type
        - schema:
            type: string
          in: query
          name: category
          description: Activity category
        - schema:
            type: array
          in: query
          name: skill
          description: Activity skills
        - schema:
            type: array
          in: query
          name: equipment
          description: Equipements required
        - schema:
            type: string
          in: query
          name: date_from
          description: Date range start
        - schema:
            type: string
          in: query
          name: date_to
          description: Date range end
        - schema:
            type: string
          in: query
          name: selection
          description: 'Selection type. [ALL|FAVORITE|TRYNEW]'
        - schema:
            type: string
            default: 'attributeId,name,description,category,type'
          in: query
          name: attributes
          description: Comma separated attribute list
      tags:
        - Activity
  '/activities/{activityId}':
    parameters:
      - schema:
          type: string
        name: activityId
        in: path
        required: true
    get:
      summary: Get activity by activity id
      tags:
        - Activity
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/Activity.Response.v1.yaml
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: ../models/ErrorResponse.v1.yaml
              examples:
                Not found:
                  value:
                    code: NOT_FOUND
                    message: Activity not found
      operationId: get-activities-activityId
      description: Get the activity
    patch:
      summary: Update activity
      operationId: patch-activities-activityId
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: ../models/ErrorResponse.v1.yaml
              examples:
                Unauthorized:
                  value:
                    code: UNAUTHORIZED
                    message: You are not authorized to update the activity
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: ../models/ErrorResponse.v1.yaml
              examples:
                Not found:
                  value:
                    code: NOT_FOUND
                    message: Activity not found
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                $ref: ../models/ErrorResponse.v1.yaml
              examples:
                Field validation error:
                  value:
                    code: VALIDATION_ERROR
                    message: Invalid activity
                    body:
                      name: Name is too long
                      type: Type is required
      description: Update existing activity
      requestBody:
        content:
          application/json:
            schema:
              $ref: ../models/Activity.Update.v1.yaml
      tags:
        - Activity
  '/activities/{activityId}/subscriptions':
    parameters:
      - schema:
          type: string
        name: activityId
        in: path
        required: true
    get:
      summary: List all subscriptions
      tags:
        - Activity
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Subscription'
      operationId: get-activities-activityId-subscriptions
      description: Search subscriptions
  '/activities/{activityId}/subscriptions/{userId}':
    parameters:
      - schema:
          type: string
        name: activityId
        in: path
        required: true
      - schema:
          type: string
        name: userId
        in: path
        required: true
    get:
      summary: Get subcription by id
      tags:
        - Activity
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/Subscription.Response.v1.yaml
      operationId: get-activities-activityId-subscriptions-userId
      description: Get subscription
    patch:
      summary: Update subscription
      operationId: patch-activities-activityId-subscriptions-userId
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: ../models/ErrorResponse.v1.yaml
              examples:
                Not authorized:
                  value:
                    code: UNAUTHORIZED
                    message: You are not authorized to modify the subscription
      description: Update subscription
      tags:
        - Activity
    put:
      summary: Create new subscription
      operationId: put-activities-activityId-subscriptions-userId
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/Subscription.Response.v1.yaml
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: ../models/ErrorResponse.v1.yaml
              examples:
                Unauthorized:
                  value:
                    code: UNAUTHORIZED
                    message: You are not authorized to create this subscription
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                $ref: ../models/ErrorResponse.v1.yaml
              examples:
                Event Full:
                  value:
                    code: LIMIT_EXCEEDED
                    message: Subscription limit exceeded
      description: Create new subscription
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: {}
      tags:
        - Activity
    delete:
      summary: Remove subscription
      operationId: delete-activities-activityId-subscriptions-userId
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: ../models/ErrorResponse.v1.yaml
              examples:
                Unauthorized:
                  value:
                    code: UNAUTHORIZED
                    message: You are not authorized to modify the subscription
      description: Unsubscribe
      tags:
        - Activity
  '/activities/{activityId}/reviews/{userId}':
    parameters:
      - schema:
          type: string
        name: activityId
        in: path
        required: true
      - schema:
          type: string
        name: userId
        in: path
        required: true
    get:
      summary: Get activity review
      tags:
        - Activity
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  review:
                    $ref: ../models/ActivityReview.v1.yaml
                required:
                  - review
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: ../models/ErrorResponse.v1.yaml
              examples:
                Not Found:
                  value:
                    code: REVIEW_NOT_FOUND
                    message: Activity review not found
      operationId: get-activity-activityId-rating
      description: Get review
    put:
      summary: Add or modify activity review
      operationId: put-activity-activityId-ratings-userId
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  review:
                    $ref: '#/components/schemas/AcrivityReview'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: ../models/ErrorResponse.v1.yaml
              examples:
                Other users:
                  value:
                    code: UNAUTHORIZED
                    message: "You are not authorized to modify other's reviews"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: ../models/ErrorResponse.v1.yaml
              examples:
                Activity Not Found:
                  value:
                    code: ACTIVITY_NOT_FOUND
                    message: Activity not found
        '412':
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: ../models/ErrorResponse.v1.yaml
              examples:
                No subscription:
                  value:
                    code: NO_SUBSCRIPTION
                    message: You have not subscribed for this activity
                Not Completed:
                  value:
                    code: NOT_COMPLETED
                    message: Activity not completed yet
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: ../models/ErrorResponse.v1.yaml
              examples:
                Invalid rating:
                  value:
                    code: VALIDATION_ERROR
                    message: Validation failed
                    body:
                      errors:
                        - field: rating
                          message: Rating should be 1 - 5
      description: Add new activity review or modify existing review
      requestBody:
        content:
          application/json:
            schema:
              $ref: ../models/ActivityReview.Create.v1.yaml
        description: ''
      tags:
        - Activity
    delete:
      summary: Delete activity review
      operationId: delete-activity-activityId-reviews-userId
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: ../models/ErrorResponse.v1.yaml
              examples:
                Not autorized:
                  value:
                    code: UNAUTHORIZED
                    message: You are not allowed to delete this review
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: ../models/ErrorResponse.v1.yaml
              examples:
                Review not found:
                  value:
                    code: REVIEW_NOT_FOUND
                    message: Activity review not found
      description: Delete review
      tags:
        - Activity
  '/activities/{activityId}/reviews':
    parameters:
      - schema:
          type: string
        name: activityId
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags:
        - Activity
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  reviews:
                    type: array
                    items:
                      $ref: '#/components/schemas/AcrivityReview'
                  total:
                    type: number
                  page:
                    type: number
                  size:
                    type: number
                required:
                  - reviews
                  - total
                  - page
                  - size
              examples:
                Example:
                  value:
                    total: 73
                    page: 4
                    size: 10
                    reviews:
                      - activityId: '1'
                        userId: U10
                        rating: '4'
                        tags:
                          - Good
                          - Great
                        comments: Great work
                        createdUser: U10
                        createdTime: 1589169834342
                        modifiedUser: U10
                        modifiedTime: 1589169834342
                        version: 1
                      - activityId: '1'
                        userId: U221
                        rating: '1'
                        tags:
                          - Bad
                          - Worst
                        comments: Worst activity
                        createdUser: U221
                        createdTime: 1589169834342
                        modifiedUser: U221
                        modifiedTime: 1589169834342
                        version: 1
      operationId: get-activities-activityId-reviews
      description: Search activity reviews
      parameters:
        - schema:
            type: number
          in: query
          name: rating
          description: Filter reviews by rating
        - schema:
            type: array
          in: query
          name: tags
          description: Filter review by tags
        - schema:
            type: string
          in: query
          name: sort
          description: Order result set
        - schema:
            type: string
          in: query
          name: size
          description: Limit result size
        - schema:
            type: string
          in: query
          name: page
          description: Result page
components:
  schemas:
    Activity:
      $ref: ../models/Activity.v1.yaml
    Subscription:
      $ref: ../models/Subscription.v1.yaml
    AcrivityReview:
      $ref: ../models/ActivityReview.v1.yaml
      description: Activity review model
  securitySchemes:
    authorization:
      name: authorization
      type: apiKey
      in: header
openapi: 3.0.0
tags:
  - name: Activity
    description: Everything about your Pets
security:
  - authorization: []
