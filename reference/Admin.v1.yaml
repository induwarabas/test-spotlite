openapi: 3.0.0
info:
  title: Admin
  version: '1.0'
  description: Admin frontend API
  contact:
    name: Avonet Technologies
servers:
  - url: 'http://localhost:4000/dev/api'
    description: Development Server
paths:
  /admin/user/invite:
    parameters: []
    post:
      summary: ''
      operationId: invite-admin-user
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Email Not Specified:
                  value:
                    code: BAD_REQUEST
                    message: Email not specified
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Already Exist:
                  value:
                    code: ALREADY_EXIST
                    message: Email already exist
      description: Send invitation with a registration link of admin frontend.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  maxLength: 64
              required:
                - email
        description: ''
      parameters: []
      tags:
        - Admin
  /admin/user/register:
    put:
      summary: ''
      operationId: register-admin-user
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  userId:
                    type: string
                    maxLength: 32
                  token:
                    type: string
                required:
                  - userId
                  - token
              examples:
                User:
                  value:
                    userId: A1754
                    token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Invalid token:
                  value:
                    code: INVALID_TOKEN
                    message: Invalid Token
                Already Exist:
                  value:
                    code: ALREADY_EXIST
                    message: You are already registered
      description: Register admin user with emailed link
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  maxLength: 64
                firstName:
                  type: string
                  maxLength: 32
                lastName:
                  type: string
                  maxLength: 32
                password:
                  type: string
                  format: password
                  maxLength: 64
                token:
                  type: string
                  format: uuid
              required:
                - email
                - firstName
                - lastName
                - password
                - token
        description: Administartor register message
      tags:
        - Admin
  /admin/user/update:
    parameters: []
    patch:
      summary: ''
      operationId: update-admin-user
      responses:
        '200':
          description: OK
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Full Object Required: {}
      description: Update admin user
      tags:
        - Admin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminUser'
        description: Admin user message. Need to send full user details to update.
  /admin/user/search:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/AdminUser'
                  total:
                    type: number
                    description: Total number of results
                required:
                  - data
                  - total
      operationId: search-admin-user
      description: Search admin user by name and email
      parameters:
        - schema:
            type: string
          in: query
          name: search
          description: The search text
        - schema:
            type: string
          in: query
          name: from
          description: Result page starting index
        - schema:
            type: string
          in: query
          name: size
          description: Result page size
  /admin/user/login:
    post:
      summary: ''
      operationId: post-admin-user-login
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Unauthorized:
                  value:
                    code: INVALID
                    message: Invalid email or password
      description: Login admin user by email and password
  /admin/user/validate-token:
    post:
      summary: ''
      operationId: post-admin-user-validate-token
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  email:
                    type: string
                    format: email
                required:
                  - email
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Invalid token:
                  value:
                    code: INVALID_TOKEN
                    message: Invalid token. Please contact administrator.
      description: Check the invitation token is valid.
components:
  schemas:
    AdminUser:
      $ref: ../models/AdminUser.v1.yaml
    ErrorResponse:
      $ref: ../models/ErrorResponse.v1.yaml
  securitySchemes:
    Authorization:
      type: http
      scheme: bearer
